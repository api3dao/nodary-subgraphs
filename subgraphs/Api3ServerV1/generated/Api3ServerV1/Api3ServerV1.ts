// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class SetDapiName extends ethereum.Event {
  get params(): SetDapiName__Params {
    return new SetDapiName__Params(this);
  }
}

export class SetDapiName__Params {
  _event: SetDapiName;

  constructor(event: SetDapiName) {
    this._event = event;
  }

  get dataFeedId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get dapiName(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class UpdatedBeaconSetWithBeacons extends ethereum.Event {
  get params(): UpdatedBeaconSetWithBeacons__Params {
    return new UpdatedBeaconSetWithBeacons__Params(this);
  }
}

export class UpdatedBeaconSetWithBeacons__Params {
  _event: UpdatedBeaconSetWithBeacons;

  constructor(event: UpdatedBeaconSetWithBeacons) {
    this._event = event;
  }

  get beaconSetId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UpdatedBeaconWithSignedData extends ethereum.Event {
  get params(): UpdatedBeaconWithSignedData__Params {
    return new UpdatedBeaconWithSignedData__Params(this);
  }
}

export class UpdatedBeaconWithSignedData__Params {
  _event: UpdatedBeaconWithSignedData;

  constructor(event: UpdatedBeaconWithSignedData) {
    this._event = event;
  }

  get beaconId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UpdatedOevProxyBeaconSetWithSignedData extends ethereum.Event {
  get params(): UpdatedOevProxyBeaconSetWithSignedData__Params {
    return new UpdatedOevProxyBeaconSetWithSignedData__Params(this);
  }
}

export class UpdatedOevProxyBeaconSetWithSignedData__Params {
  _event: UpdatedOevProxyBeaconSetWithSignedData;

  constructor(event: UpdatedOevProxyBeaconSetWithSignedData) {
    this._event = event;
  }

  get beaconSetId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get proxy(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get updateId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class UpdatedOevProxyBeaconWithSignedData extends ethereum.Event {
  get params(): UpdatedOevProxyBeaconWithSignedData__Params {
    return new UpdatedOevProxyBeaconWithSignedData__Params(this);
  }
}

export class UpdatedOevProxyBeaconWithSignedData__Params {
  _event: UpdatedOevProxyBeaconWithSignedData;

  constructor(event: UpdatedOevProxyBeaconWithSignedData) {
    this._event = event;
  }

  get beaconId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get proxy(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get updateId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Withdrew extends ethereum.Event {
  get params(): Withdrew__Params {
    return new Withdrew__Params(this);
  }
}

export class Withdrew__Params {
  _event: Withdrew;

  constructor(event: Withdrew) {
    this._event = event;
  }

  get oevProxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oevBeneficiary(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Api3ServerV1__dataFeedsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromSignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue(): BigInt {
    return this.value0;
  }

  getTimestamp(): BigInt {
    return this.value1;
  }
}

export class Api3ServerV1__oevProxyToIdToDataFeedResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromSignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue(): BigInt {
    return this.value0;
  }

  getTimestamp(): BigInt {
    return this.value1;
  }
}

export class Api3ServerV1__readDataFeedWithDapiNameHashResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromSignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue(): BigInt {
    return this.value0;
  }

  getTimestamp(): BigInt {
    return this.value1;
  }
}

export class Api3ServerV1__readDataFeedWithDapiNameHashAsOevProxyResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromSignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue(): BigInt {
    return this.value0;
  }

  getTimestamp(): BigInt {
    return this.value1;
  }
}

export class Api3ServerV1__readDataFeedWithIdResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromSignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue(): BigInt {
    return this.value0;
  }

  getTimestamp(): BigInt {
    return this.value1;
  }
}

export class Api3ServerV1__readDataFeedWithIdAsOevProxyResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromSignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue(): BigInt {
    return this.value0;
  }

  getTimestamp(): BigInt {
    return this.value1;
  }
}

export class Api3ServerV1__tryMulticallResult {
  value0: Array<boolean>;
  value1: Array<Bytes>;

  constructor(value0: Array<boolean>, value1: Array<Bytes>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBooleanArray(this.value0));
    map.set("value1", ethereum.Value.fromBytesArray(this.value1));
    return map;
  }

  getSuccesses(): Array<boolean> {
    return this.value0;
  }

  getReturndata(): Array<Bytes> {
    return this.value1;
  }
}

export class Api3ServerV1 extends ethereum.SmartContract {
  static bind(address: Address): Api3ServerV1 {
    return new Api3ServerV1("Api3ServerV1", address);
  }

  DAPI_NAME_SETTER_ROLE_DESCRIPTION(): string {
    let result = super.call(
      "DAPI_NAME_SETTER_ROLE_DESCRIPTION",
      "DAPI_NAME_SETTER_ROLE_DESCRIPTION():(string)",
      []
    );

    return result[0].toString();
  }

  try_DAPI_NAME_SETTER_ROLE_DESCRIPTION(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "DAPI_NAME_SETTER_ROLE_DESCRIPTION",
      "DAPI_NAME_SETTER_ROLE_DESCRIPTION():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  accessControlRegistry(): Address {
    let result = super.call(
      "accessControlRegistry",
      "accessControlRegistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_accessControlRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "accessControlRegistry",
      "accessControlRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  adminRole(): Bytes {
    let result = super.call("adminRole", "adminRole():(bytes32)", []);

    return result[0].toBytes();
  }

  try_adminRole(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("adminRole", "adminRole():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  adminRoleDescription(): string {
    let result = super.call(
      "adminRoleDescription",
      "adminRoleDescription():(string)",
      []
    );

    return result[0].toString();
  }

  try_adminRoleDescription(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "adminRoleDescription",
      "adminRoleDescription():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  containsBytecode(account: Address): boolean {
    let result = super.call(
      "containsBytecode",
      "containsBytecode(address):(bool)",
      [ethereum.Value.fromAddress(account)]
    );

    return result[0].toBoolean();
  }

  try_containsBytecode(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "containsBytecode",
      "containsBytecode(address):(bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  dapiNameHashToDataFeedId(param0: Bytes): Bytes {
    let result = super.call(
      "dapiNameHashToDataFeedId",
      "dapiNameHashToDataFeedId(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toBytes();
  }

  try_dapiNameHashToDataFeedId(param0: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "dapiNameHashToDataFeedId",
      "dapiNameHashToDataFeedId(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  dapiNameSetterRole(): Bytes {
    let result = super.call(
      "dapiNameSetterRole",
      "dapiNameSetterRole():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_dapiNameSetterRole(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "dapiNameSetterRole",
      "dapiNameSetterRole():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  dapiNameToDataFeedId(dapiName: Bytes): Bytes {
    let result = super.call(
      "dapiNameToDataFeedId",
      "dapiNameToDataFeedId(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(dapiName)]
    );

    return result[0].toBytes();
  }

  try_dapiNameToDataFeedId(dapiName: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "dapiNameToDataFeedId",
      "dapiNameToDataFeedId(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(dapiName)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  dataFeeds(dataFeedId: Bytes): Api3ServerV1__dataFeedsResult {
    let result = super.call("dataFeeds", "dataFeeds(bytes32):(int224,uint32)", [
      ethereum.Value.fromFixedBytes(dataFeedId)
    ]);

    return new Api3ServerV1__dataFeedsResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_dataFeeds(
    dataFeedId: Bytes
  ): ethereum.CallResult<Api3ServerV1__dataFeedsResult> {
    let result = super.tryCall(
      "dataFeeds",
      "dataFeeds(bytes32):(int224,uint32)",
      [ethereum.Value.fromFixedBytes(dataFeedId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Api3ServerV1__dataFeedsResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getBalance(account: Address): BigInt {
    let result = super.call("getBalance", "getBalance(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_getBalance(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getBalance", "getBalance(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBlockBasefee(): BigInt {
    let result = super.call(
      "getBlockBasefee",
      "getBlockBasefee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getBlockBasefee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBlockBasefee",
      "getBlockBasefee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBlockNumber(): BigInt {
    let result = super.call("getBlockNumber", "getBlockNumber():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getBlockNumber(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBlockNumber",
      "getBlockNumber():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBlockTimestamp(): BigInt {
    let result = super.call(
      "getBlockTimestamp",
      "getBlockTimestamp():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getBlockTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBlockTimestamp",
      "getBlockTimestamp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getChainId(): BigInt {
    let result = super.call("getChainId", "getChainId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getChainId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getChainId", "getChainId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  manager(): Address {
    let result = super.call("manager", "manager():(address)", []);

    return result[0].toAddress();
  }

  try_manager(): ethereum.CallResult<Address> {
    let result = super.tryCall("manager", "manager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  multicall(data: Array<Bytes>): Array<Bytes> {
    let result = super.call("multicall", "multicall(bytes[]):(bytes[])", [
      ethereum.Value.fromBytesArray(data)
    ]);

    return result[0].toBytesArray();
  }

  try_multicall(data: Array<Bytes>): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall("multicall", "multicall(bytes[]):(bytes[])", [
      ethereum.Value.fromBytesArray(data)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  oevProxyToBalance(param0: Address): BigInt {
    let result = super.call(
      "oevProxyToBalance",
      "oevProxyToBalance(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_oevProxyToBalance(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "oevProxyToBalance",
      "oevProxyToBalance(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  oevProxyToIdToDataFeed(
    proxy: Address,
    dataFeedId: Bytes
  ): Api3ServerV1__oevProxyToIdToDataFeedResult {
    let result = super.call(
      "oevProxyToIdToDataFeed",
      "oevProxyToIdToDataFeed(address,bytes32):(int224,uint32)",
      [
        ethereum.Value.fromAddress(proxy),
        ethereum.Value.fromFixedBytes(dataFeedId)
      ]
    );

    return new Api3ServerV1__oevProxyToIdToDataFeedResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_oevProxyToIdToDataFeed(
    proxy: Address,
    dataFeedId: Bytes
  ): ethereum.CallResult<Api3ServerV1__oevProxyToIdToDataFeedResult> {
    let result = super.tryCall(
      "oevProxyToIdToDataFeed",
      "oevProxyToIdToDataFeed(address,bytes32):(int224,uint32)",
      [
        ethereum.Value.fromAddress(proxy),
        ethereum.Value.fromFixedBytes(dataFeedId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Api3ServerV1__oevProxyToIdToDataFeedResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  readDataFeedWithDapiNameHash(
    dapiNameHash: Bytes
  ): Api3ServerV1__readDataFeedWithDapiNameHashResult {
    let result = super.call(
      "readDataFeedWithDapiNameHash",
      "readDataFeedWithDapiNameHash(bytes32):(int224,uint32)",
      [ethereum.Value.fromFixedBytes(dapiNameHash)]
    );

    return new Api3ServerV1__readDataFeedWithDapiNameHashResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_readDataFeedWithDapiNameHash(
    dapiNameHash: Bytes
  ): ethereum.CallResult<Api3ServerV1__readDataFeedWithDapiNameHashResult> {
    let result = super.tryCall(
      "readDataFeedWithDapiNameHash",
      "readDataFeedWithDapiNameHash(bytes32):(int224,uint32)",
      [ethereum.Value.fromFixedBytes(dapiNameHash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Api3ServerV1__readDataFeedWithDapiNameHashResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  readDataFeedWithDapiNameHashAsOevProxy(
    dapiNameHash: Bytes
  ): Api3ServerV1__readDataFeedWithDapiNameHashAsOevProxyResult {
    let result = super.call(
      "readDataFeedWithDapiNameHashAsOevProxy",
      "readDataFeedWithDapiNameHashAsOevProxy(bytes32):(int224,uint32)",
      [ethereum.Value.fromFixedBytes(dapiNameHash)]
    );

    return new Api3ServerV1__readDataFeedWithDapiNameHashAsOevProxyResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_readDataFeedWithDapiNameHashAsOevProxy(
    dapiNameHash: Bytes
  ): ethereum.CallResult<
    Api3ServerV1__readDataFeedWithDapiNameHashAsOevProxyResult
  > {
    let result = super.tryCall(
      "readDataFeedWithDapiNameHashAsOevProxy",
      "readDataFeedWithDapiNameHashAsOevProxy(bytes32):(int224,uint32)",
      [ethereum.Value.fromFixedBytes(dapiNameHash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Api3ServerV1__readDataFeedWithDapiNameHashAsOevProxyResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  readDataFeedWithId(
    dataFeedId: Bytes
  ): Api3ServerV1__readDataFeedWithIdResult {
    let result = super.call(
      "readDataFeedWithId",
      "readDataFeedWithId(bytes32):(int224,uint32)",
      [ethereum.Value.fromFixedBytes(dataFeedId)]
    );

    return new Api3ServerV1__readDataFeedWithIdResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_readDataFeedWithId(
    dataFeedId: Bytes
  ): ethereum.CallResult<Api3ServerV1__readDataFeedWithIdResult> {
    let result = super.tryCall(
      "readDataFeedWithId",
      "readDataFeedWithId(bytes32):(int224,uint32)",
      [ethereum.Value.fromFixedBytes(dataFeedId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Api3ServerV1__readDataFeedWithIdResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  readDataFeedWithIdAsOevProxy(
    dataFeedId: Bytes
  ): Api3ServerV1__readDataFeedWithIdAsOevProxyResult {
    let result = super.call(
      "readDataFeedWithIdAsOevProxy",
      "readDataFeedWithIdAsOevProxy(bytes32):(int224,uint32)",
      [ethereum.Value.fromFixedBytes(dataFeedId)]
    );

    return new Api3ServerV1__readDataFeedWithIdAsOevProxyResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_readDataFeedWithIdAsOevProxy(
    dataFeedId: Bytes
  ): ethereum.CallResult<Api3ServerV1__readDataFeedWithIdAsOevProxyResult> {
    let result = super.tryCall(
      "readDataFeedWithIdAsOevProxy",
      "readDataFeedWithIdAsOevProxy(bytes32):(int224,uint32)",
      [ethereum.Value.fromFixedBytes(dataFeedId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Api3ServerV1__readDataFeedWithIdAsOevProxyResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  tryMulticall(data: Array<Bytes>): Api3ServerV1__tryMulticallResult {
    let result = super.call(
      "tryMulticall",
      "tryMulticall(bytes[]):(bool[],bytes[])",
      [ethereum.Value.fromBytesArray(data)]
    );

    return new Api3ServerV1__tryMulticallResult(
      result[0].toBooleanArray(),
      result[1].toBytesArray()
    );
  }

  try_tryMulticall(
    data: Array<Bytes>
  ): ethereum.CallResult<Api3ServerV1__tryMulticallResult> {
    let result = super.tryCall(
      "tryMulticall",
      "tryMulticall(bytes[]):(bool[],bytes[])",
      [ethereum.Value.fromBytesArray(data)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Api3ServerV1__tryMulticallResult(
        value[0].toBooleanArray(),
        value[1].toBytesArray()
      )
    );
  }

  updateBeaconSetWithBeacons(beaconIds: Array<Bytes>): Bytes {
    let result = super.call(
      "updateBeaconSetWithBeacons",
      "updateBeaconSetWithBeacons(bytes32[]):(bytes32)",
      [ethereum.Value.fromFixedBytesArray(beaconIds)]
    );

    return result[0].toBytes();
  }

  try_updateBeaconSetWithBeacons(
    beaconIds: Array<Bytes>
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "updateBeaconSetWithBeacons",
      "updateBeaconSetWithBeacons(bytes32[]):(bytes32)",
      [ethereum.Value.fromFixedBytesArray(beaconIds)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  updateBeaconWithSignedData(
    airnode: Address,
    templateId: Bytes,
    timestamp: BigInt,
    data: Bytes,
    signature: Bytes
  ): Bytes {
    let result = super.call(
      "updateBeaconWithSignedData",
      "updateBeaconWithSignedData(address,bytes32,uint256,bytes,bytes):(bytes32)",
      [
        ethereum.Value.fromAddress(airnode),
        ethereum.Value.fromFixedBytes(templateId),
        ethereum.Value.fromUnsignedBigInt(timestamp),
        ethereum.Value.fromBytes(data),
        ethereum.Value.fromBytes(signature)
      ]
    );

    return result[0].toBytes();
  }

  try_updateBeaconWithSignedData(
    airnode: Address,
    templateId: Bytes,
    timestamp: BigInt,
    data: Bytes,
    signature: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "updateBeaconWithSignedData",
      "updateBeaconWithSignedData(address,bytes32,uint256,bytes,bytes):(bytes32)",
      [
        ethereum.Value.fromAddress(airnode),
        ethereum.Value.fromFixedBytes(templateId),
        ethereum.Value.fromUnsignedBigInt(timestamp),
        ethereum.Value.fromBytes(data),
        ethereum.Value.fromBytes(signature)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _accessControlRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _adminRoleDescription(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _manager(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class MulticallCall extends ethereum.Call {
  get inputs(): MulticallCall__Inputs {
    return new MulticallCall__Inputs(this);
  }

  get outputs(): MulticallCall__Outputs {
    return new MulticallCall__Outputs(this);
  }
}

export class MulticallCall__Inputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get data(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class MulticallCall__Outputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get returndata(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class SetDapiNameCall extends ethereum.Call {
  get inputs(): SetDapiNameCall__Inputs {
    return new SetDapiNameCall__Inputs(this);
  }

  get outputs(): SetDapiNameCall__Outputs {
    return new SetDapiNameCall__Outputs(this);
  }
}

export class SetDapiNameCall__Inputs {
  _call: SetDapiNameCall;

  constructor(call: SetDapiNameCall) {
    this._call = call;
  }

  get dapiName(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get dataFeedId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetDapiNameCall__Outputs {
  _call: SetDapiNameCall;

  constructor(call: SetDapiNameCall) {
    this._call = call;
  }
}

export class TryMulticallCall extends ethereum.Call {
  get inputs(): TryMulticallCall__Inputs {
    return new TryMulticallCall__Inputs(this);
  }

  get outputs(): TryMulticallCall__Outputs {
    return new TryMulticallCall__Outputs(this);
  }
}

export class TryMulticallCall__Inputs {
  _call: TryMulticallCall;

  constructor(call: TryMulticallCall) {
    this._call = call;
  }

  get data(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class TryMulticallCall__Outputs {
  _call: TryMulticallCall;

  constructor(call: TryMulticallCall) {
    this._call = call;
  }

  get successes(): Array<boolean> {
    return this._call.outputValues[0].value.toBooleanArray();
  }

  get returndata(): Array<Bytes> {
    return this._call.outputValues[1].value.toBytesArray();
  }
}

export class UpdateBeaconSetWithBeaconsCall extends ethereum.Call {
  get inputs(): UpdateBeaconSetWithBeaconsCall__Inputs {
    return new UpdateBeaconSetWithBeaconsCall__Inputs(this);
  }

  get outputs(): UpdateBeaconSetWithBeaconsCall__Outputs {
    return new UpdateBeaconSetWithBeaconsCall__Outputs(this);
  }
}

export class UpdateBeaconSetWithBeaconsCall__Inputs {
  _call: UpdateBeaconSetWithBeaconsCall;

  constructor(call: UpdateBeaconSetWithBeaconsCall) {
    this._call = call;
  }

  get beaconIds(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class UpdateBeaconSetWithBeaconsCall__Outputs {
  _call: UpdateBeaconSetWithBeaconsCall;

  constructor(call: UpdateBeaconSetWithBeaconsCall) {
    this._call = call;
  }

  get beaconSetId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class UpdateBeaconWithSignedDataCall extends ethereum.Call {
  get inputs(): UpdateBeaconWithSignedDataCall__Inputs {
    return new UpdateBeaconWithSignedDataCall__Inputs(this);
  }

  get outputs(): UpdateBeaconWithSignedDataCall__Outputs {
    return new UpdateBeaconWithSignedDataCall__Outputs(this);
  }
}

export class UpdateBeaconWithSignedDataCall__Inputs {
  _call: UpdateBeaconWithSignedDataCall;

  constructor(call: UpdateBeaconWithSignedDataCall) {
    this._call = call;
  }

  get airnode(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get templateId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get signature(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class UpdateBeaconWithSignedDataCall__Outputs {
  _call: UpdateBeaconWithSignedDataCall;

  constructor(call: UpdateBeaconWithSignedDataCall) {
    this._call = call;
  }

  get beaconId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class UpdateOevProxyDataFeedWithSignedDataCall extends ethereum.Call {
  get inputs(): UpdateOevProxyDataFeedWithSignedDataCall__Inputs {
    return new UpdateOevProxyDataFeedWithSignedDataCall__Inputs(this);
  }

  get outputs(): UpdateOevProxyDataFeedWithSignedDataCall__Outputs {
    return new UpdateOevProxyDataFeedWithSignedDataCall__Outputs(this);
  }
}

export class UpdateOevProxyDataFeedWithSignedDataCall__Inputs {
  _call: UpdateOevProxyDataFeedWithSignedDataCall;

  constructor(call: UpdateOevProxyDataFeedWithSignedDataCall) {
    this._call = call;
  }

  get oevProxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get dataFeedId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get updateId(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get packedOevUpdateSignatures(): Array<Bytes> {
    return this._call.inputValues[5].value.toBytesArray();
  }
}

export class UpdateOevProxyDataFeedWithSignedDataCall__Outputs {
  _call: UpdateOevProxyDataFeedWithSignedDataCall;

  constructor(call: UpdateOevProxyDataFeedWithSignedDataCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get oevProxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
